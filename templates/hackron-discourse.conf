gzip on;
gzip_min_length 1000;
gzip_types application/json text/css application/x-javascript;

sendfile on;

keepalive_timeout 65;

# maximum file upload size (keep up to date when changing the corresponding site setting)
client_max_body_size 2m;

# path to discourse's public directory
set $public {{uwsgi_app_path}}/public;

location / {
  root $public;

  location ~* \.(eot|ttf|woff|ico)$ {
    expires 1y;
    add_header Cache-Control public;
    add_header Access-Control-Allow-Origin *;
   }

  location ~ ^/assets/ {
    expires 1y;
    add_header ETag "";
    add_header Cache-Control public;
    break;
  }

  location ~ ^/uploads/ {
    expires 1y;
    add_header ETag "";
    add_header Cache-Control public;

    ## optional upload anti-hotlinking rules
    #valid_referers none blocked mysite.com *.mysite.com;
    #if ($invalid_referer) { return 403; }

    # custom CSS
    location ~ /stylesheet-cache/ { try_files $uri =404; }
    # images
    location ~* \.(gif|png|jpg|jpeg|bmp|tif|tiff)$ { try_files $uri =404; }
    # thumbnails & optimized images
    location ~ /_optimized/ { try_files $uri =404; }

    # attachments must go through the rails application to get the right content-disposition header
    try_files @discourse =404;
    break;
  }

  location ~ ^/backups/ {
    # backups must go through the rails application to handle security
    try_files @discourse =404;
    break;
  }

  try_files $uri @discourse;
}

location @discourse {
    uwsgi_pass unix:{{uwsgi_tmp_path}}/uwsgi.socket;
    include uwsgi_params;
    #uwsgi_param PATH_INFO /$1;
    #uwsgi_param SCRIPT_NAME {{uwsgi_mount}};
    uwsgi_modifier1 0;
}

location /downloads/ {
  internal;
  alias $public/;
}
